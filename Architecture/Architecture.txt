Пример клиент-серверной многопользовательской системы: социальная сеть.
Выбранная архитектура: трехуровневая архитектура.

Описание.

1. Система, архитектура, чем обусловлен выбор.
    Социальная сеть - место, где люди могут общаться, обмениваться вообщениями, просматривать новости, делиться своими событиями и т.п. Для поставленной задачи была выбрана трехуровневая архитектура из-за того, что клиент приложения подает запрос на сервер, где он обрабатывается, обращаясь к БД. Таким образом, можно будет получать списки друзей, музыки, сообщений. 

2. Какие компоненты и за что каждый отвечает.
    "Тонкий" клиент, который предоставляет UI. Клиенту достаточно лишь обеспечить возможность запуска web-браузера, в окне которого будут осуществляться все действия. Вся логика выполняется на сервере.
    Сервер Java-приложений. Позволит управлять ресурсами, получить доступ к СУБД, почтовому сервису. Обеспечит защиту и безопасность данных.
    И БД, где будет находится информация о пользователях, их сообщения, их ресурсы и личные данные.

3. Как компоненты взаимодействуют между собой.
    Компоненты взаимодействуют между собой через промежуточное ПО, такое как API, к примеру. Запрос посылается на сервер, обрабатывается через API, посылается ответ. Через универсальное ПО доступа к БД, можно обращаться к БД, получая необходимую информацию.

4. Как архитектура решает проблему производительности, надежности и безопасности.
    Производительность: Данная архитектура позволит использовать высокоскоростные соединения между серверами и отдавать на клиент только результат запроса, что будет полезным из-за большого количества возможных запросов от неограниченного количества пользователей.
    Надежность; Данная архитектура позволит кэшировать ответы от сервера БД и использовать их на время недоступности сервера, что организует доступ к данным, когда сервер ляжет или по другим причинам.
    Безопасность: Данная архитектура позволяет изолировать сервер БД от клиента, что позволит хранить многие данные о пользователе в безопасности. Она(архитектура) позволит организовать проверки безопасности. Как вариант - авторизация.
    
Пример запросов можно посмотреть в Sequence diagram.
